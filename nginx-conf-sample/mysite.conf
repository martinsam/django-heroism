# This needs to be its own server block (rather than simply adding the line:
#   listen  443 default ssl;
# and the cert paths to the existing block), because we need to pass along
# a header to Apache that a custom Django middleware will look to determine
# whether or not the request is secure, as all proxied requests are via http
# and thus appear to be insecure to Apache (and ergo to Django).
server {
            listen   443;
            ssl on;
            ssl_certificate      /path/to/certs/combined.crt;
            ssl_certificate_key  /path/to/certs/my.host.key;

            ### Everything above this line is SSL-specific.
            ### Everything below this line is the same as the port 80 block,
            ### except for the X-Forwarded-Protocol line in location / block.

            root         /var/www/sites/mysite.com/public/;
            access_log   /var/www/sites/mysite.com/log/nginx-access.log  main;
            error_log    /var/www/sites/mysite.com/log/nginx-error.log  debug;

            location = /robots.txt {
            }

            location = /favicon.ico {
                expires  max;
            }

            location ^~ /media/ {
                expires  max;
            }
            location / {
                # The name of this header is arbitrary, but must match the
                # name specified in our custom middleware that sniffs for it.
                # NOTE: calling proxy_set_header overwrites any calls to it
                # that were made in higher scopes, so keep this call and the
                # "include proxy.conf" statement in the same scope, since
                # there are calls to proxy_set_header in proxy.conf.
                proxy_set_header  X-Forwarded-Protocol  "https";
                include  proxy.conf;
                proxy_redirect off; 
				proxy_set_header Host $host;
				proxy_set_header Port $proxy_port;
				proxy_set_header X-Real-IP $remote_addr;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				#proxy_set_header X-Forwarded-Protocol ssl;
				proxy_set_header X-Forwarded-SSL on;
				proxy_set_header X-Url-Scheme $scheme;

                
            }
}
server {
            listen       80;
            server_name  www.mysite.com;
            root         /var/www/sites/mysite.com/public/;
            access_log   /var/www/sites/mysite.com/log/nginx-access.log  main;
            error_log    /var/www/sites/mysite.com/log/nginx-error.log  debug;

            location = /robots.txt {
            }

            location = /favicon.ico {
                expires  max;
            }

            location ^~ /media/ {
                expires  max;
            }
            location / {
                include  proxy.conf;
            }
}
server {
            listen   80;
            server_name  mysite.com
                         .mysite.net
                         .mysite.org
                         ;
            rewrite ^/(.*) http://www.mysite.com/$1 permanent;
}
